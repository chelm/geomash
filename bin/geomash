#!/usr/bin/env node
var stream = require('JSONStream'),
  async = require('async'),
  es = require('event-stream'),
  fs = require('fs'),
  geomash = require('../')

var argv = require('optimist')
    .usage('Usage: $0 -i [id string] -f [input file] -o [output file] -p [precision number] -v ')
    .demand(['i'])
    .default('f', null)
    .default('o', null)
    .default('p', '9')
    .argv

var parser = stream.parse('features.*')

function finish(){
  geomash.dump(argv.i, function(err, agg){
    if (argv.o){
      fs.writeFileSync(argv.o, JSON.stringify(agg))
    } else {
      console.log(JSON.stringify(agg))
    }
  })
}

function add(f, callback){
  if (argv.v) {
    console.log(f)
  }
  geomash.add(argv.i, f, argv.p, callback)
}

var q = async.queue(add, 1)

q.drain = function(){
  finish()
}

geomash.clear(argv.i, function (err) {
  if (err) {
    return console.log('Could not clear aggregation');
  }
  if (argv.f){
    var read = fs.createReadStream(argv.f);
    read.pipe(parser)
      .pipe(es.mapSync(function (f) {
        q.push(f, function(){})
      }))
  } else {
    process.stdin
      .pipe(parser)
      .pipe(es.mapSync(function (f) {
        q.push(f, function(){})
      }))
  }
})
